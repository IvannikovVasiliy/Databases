/*Выбрать названия дисциплин, которые преподаются сотрудниками факультета ПММ, количество студентов сдававших дисциплину, среднюю оценку по дисциплине. 
В результат включить только дисциплины, которые сдавало, более 20 студентов.*/
SELECT Д.Название, COUNT(С.[Номер студенческого билета]), AVG(У.Оценка)
FROM Дисциплины Д JOIN Успеваемость У ON Д.id_дисциплины = У.id_дисциплины JOIN Преподаватели П ON У.id_преподавателя = П.id_преподавателя 
	JOIN Факультеты Ф ON Ф.id_факультета = П.id_факультета JOIN Студенты С ON С.id_факультета = Ф.id_факультета AND С.[Номер студенческого билета] = У.[Номер Студенческого Билета]
WHERE Ф.Название = 'ПММ'
GROUP BY Д.Название
HAVING COUNT(С.[Номер студенческого билета]) > 20;

/*Выбрать фамилию, имя, отчество преподавателя, фамилию и инициалы его руководителя.*/
SELECT П.Фамилия, П.Имя, П.Отчество, Р.Фамилия + ' ' + SUBSTRING(Р.Имя, 1, 1) + '. ' + SUBSTRING(Р.Отчество, 1, 1) + '.'
FROM Преподаватели П JOIN Преподаватели Р ON П.id_руководителя = Р.id_преподавателя

--Выбрать преподавателей, которые имеют оклад больше, чем их руководитель.
SELECT П.Фамилия
FROM Преподаватели П JOIN Преподаватели Р ON П.id_руководителя = Р.id_преподавателя 
	JOIN Преподаватель_в_Должности ПВД ON ПВД.id_преподавателя = П.id_преподавателя JOIN Должности Д ON Д.id_должности = ПВД.id_должности
	JOIN Преподаватель_в_Должности РукПВД ON РукПВД.id_преподавателя = Р.id_преподавателя JOIN Должности РукД ON РукД.id_должности = РукПВД.id_должности 
WHERE Д.Оклад > РукД.Оклад;

--Выбрать все данные студента, который старше какого-нибудь преподавателя.
SELECT DISTINCT С.*
FROM Студенты С CROSS JOIN Преподаватели П
GROUP BY С.[Дата рождения], С.[Номер студенческого билета], С.Фамилия, С.Имя, С.Отчество, С.Курс, С.Группа, С.Стипендия, С.id_факультета
HAVING С.[Дата рождения] < MAX(П.[Дата рождения]);

--Выбрать однофамильцев среди преподавателей и студентов.
SELECT П.Фамилия
FROM Преподаватели П JOIN Студенты С ON С.Фамилия = П.Фамилия;

--Выбрать тройки однофамильцев среди студентов.
SELECT С1.Фамилия
FROM Студенты С1 JOIN Студенты С2 ON С1.Фамилия = С2.Фамилия JOIN Студенты С3 ON С2.Фамилия = С3.Фамилия 
	AND С1.[Номер студенческого билета] > С2.[Номер студенческого билета] 
	AND С2.[Номер студенческого билета] > С3.[Номер студенческого билета] 
GROUP BY С1.Фамилия;

--Выбрать общее количество однофамильцев среди студентов.
SELECT С.Фамилия, COUNT(С.Фамилия)
FROM Студенты С
GROUP BY С.Фамилия
HAVING COUNT(С.Фамилия) > 1;

/*Выбрать фамилию имя отчество студента в одном столбце, во втором столбце результирующей таблице показать количество пятерок студента, 
в третьем столбце - количество четверок, в четвертом столбце - количество троек, в пятом столбце - количество двоек, в последнем столбце общее количество оценок.*/
SELECT С.Фамилия,
	CASE
		WHEN У.Оценка = 5
		THEN COUNT(У.Оценка)
		ELSE 0
	END,
	CASE
		WHEN У.Оценка = 4
		THEN COUNT(У.Оценка)
		ELSE 0
	END,
	CASE
		WHEN У.Оценка = 3
		THEN COUNT(У.Оценка)
		ELSE 0
	END,
	CASE
		WHEN У.Оценка = 2
		THEN COUNT(У.Оценка)
		ELSE 0
	END, COUNT(У.Оценка)
FROM Студенты С JOIN Успеваемость У ON С.[Номер студенческого билета] = У.[Номер Студенческого Билета]
GROUP BY С.Фамилия, У.Оценка

--Для каждого студента выбрать названия всех дисциплин.
SELECT С.[Номер студенческого билета], Д.Название
FROM Студенты С JOIN Успеваемость У ON С.[Номер студенческого билета] = У.[Номер Студенческого Билета] JOIN Дисциплины Д ON У.id_дисциплины = Д.id_дисциплины;

--Для каждого студента факультета ПММ выбрать названия всех имеющихся в БД дисциплин.
SELECT С.Фамилия, С.Имя, С.Отчество, Д.Название
FROM Студенты С JOIN Факультеты Ф ON С.id_факультета = Ф.id_факультета JOIN Успеваемость У ON С.[Номер студенческого билета] = У.[Номер Студенческого Билета] 
	JOIN Дисциплины Д ON У.id_дисциплины = Д.id_дисциплины
WHERE Ф.Название = 'ПММ';