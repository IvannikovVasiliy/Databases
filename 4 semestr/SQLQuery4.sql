--Выбрать для каждого года количество студентов, рожденных в этот год. Результат отсортировать по количеству студентов в порядке убывания.
SELECT YEAR([Дата рождения]), COUNT([Дата рождения])
FROM Студенты
GROUP BY YEAR([Дата рождения]);

--Выбрать номер месяца и количество первокурсников, рожденных в этот месяц.
SELECT MONTH([Дата рождения]), COUNT([Номер студенческого билета])
FROM Студенты
WHERE Курс = 1
GROUP BY MONTH([Дата рождения]);

--Выбрать группы, в которых не более 10 студентов.
SELECT Группа, COUNT([Номер студенческого билета])
FROM Студенты
GROUP BY Группа
HAVING COUNT([Номер студенческого билета]) <= 10

/*Выбрать имя и количество студентов с этим именем. В результат включить имена, которые есть у пяти и более студентов. 
Результат отсортировать по имени в лексикографическом порядке.*/
SELECT Имя, COUNT([Номер студенческого билета])
FROM Студенты
GROUP BY Имя
HAVING COUNT([Номер студенческого билета]) >= 5
ORDER BY 1;

--Для каждой пары фамилия, имя выбрать количество тезок однофамильцев.
SELECT Фамилия, Имя, COUNT([Номер студенческого билета])
FROM Студенты
GROUP BY Фамилия, Имя;

--Выбрать для каждого id_факультета средний возраст преподавателей.
SELECT id_факультета, AVG(
							YEAR(GETDATE()) - YEAR([Дата рождения]) - 
							CASE
								WHEN MONTH(GETDATE()) > MONTH([Дата рождения]) OR (MONTH(GETDATE()) = MONTH([Дата рождения]) AND DAY(GETDATE()) >= DAY([Дата рождения]))
								THEN 0
								ELSE 1
							END
						 )
FROM Преподаватели
GROUP BY id_факультета

/*Выбрать для факультетов с id равному 2, 3, 5, 7. Количество преподавателей В результат включать факультеты на которых более 100 преподавателей.*/
SELECT id_факультета, COUNT(id_преподавателя)
FROM Преподаватели
WHERE id_факультета IN (2, 3, 5, 7)
GROUP BY id_факультета
HAVING COUNT(id_преподавателя) > 100;

/*Выбрать фамилию и количество студентов на первом и втором курсах с этой фамилией. 
В результат включить только те фамилии, которые есть хотя бы у трех студентов. Результат отсортировать в порядке обратном лексикографическому.*/
SELECT Фамилия, COUNT([Номер студенческого билета])
FROM Студенты
WHERE Курс IN (1, 2)
GROUP BY Фамилия
HAVING COUNT([Номер студенческого билета]) >= 3
ORDER BY 1 DESC;

--Выбрать все номера курсов без повторений.
SELECT DISTINCT Курс
FROM Студенты;

/*
SELECT Курс
FROM Студенты
GROUP BY Курс;
*/

--Выбрать размер максимальной стипендии на втором и первом курсах.
SELECT Курс, MAX(Стипендия)
FROM Студенты
WHERE Курс IN (1, 2)
GROUP BY Курс;

--Распределение по временам года
SELECT 
	CASE
		WHEN MONTH([Дата рождения]) IN (1, 2, 12)
		THEN 'зима'

		WHEN MONTH([Дата рождения]) IN (3, 4, 5)
		THEN 'весна'

		WHEN MONTH([Дата рождения]) IN (6, 7, 8)
		THEN 'лето'

		WHEN MONTH([Дата рождения]) IN (9, 10, 11)
		THEN 'осень'
	END, YEAR([Дата рождения]), COUNT([Номер студенческого билета])
FROM Студенты
GROUP BY 
	CASE
		WHEN MONTH([Дата рождения]) IN (1, 2, 12)
		THEN 'зима'

		WHEN MONTH([Дата рождения]) IN (3, 4, 5)
		THEN 'весна'

		WHEN MONTH([Дата рождения]) IN (6, 7, 8)
		THEN 'лето'

		WHEN MONTH([Дата рождения]) IN (9, 10, 11)
		THEN 'осень'
	END, YEAR([Дата рождения])