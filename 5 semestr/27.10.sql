--42.Выбрать сотрудника, который никогда не завершает задачи в срок.SELECT С.id_сотрудникаFROM Сотрудники СWHERE NOT EXISTS(					SELECT ИЗ.id_задачи					FROM [Исполнители задач] ИЗ JOIN Задачи З ON ИЗ.id_задачи = З.id_задачи					WHERE З.[Дата завершения факт] < З.[Дата завершения план] 						AND С.id_сотрудника = ИЗ.id_сотрудника				);--45.Выбрать название проекта с наибольшим количеством
--незавершенных задач.
WITH Count_Tasks([Название проекта], [Количество задач]) AS(
	SELECT П.Название, COUNT(З.id_задачи)
	FROM Проекты П JOIN Задачи З ON П.id_проекта = З.id_проекта
	WHERE З.[Дата завершения факт] IS NULL
	GROUP BY П.Название
),
MIN_Count(Минимум) AS(
	SELECT MIN([Количество задач])
	FROM Count_Tasks CT
)
SELECT CT.[Название проекта]
FROM Count_Tasks CT JOIN MIN_Count MC ON CT.[Количество задач] = MC.Минимум;

--47.Выбрать все даты, которые есть в базе данных. Результат
--отсортировать в убывающем порядке.
SELECT [Дата рождения] AS Даты
FROM Сотрудники
UNION
SELECT [Дата завершения план]
FROM Задачи
UNION
SELECT [Дата завершения факт]
FROM Задачи
UNION
SELECT [Дата начала]
FROM Задачи
UNION
SELECT [Дата начала разработки]
FROM Проекты

--48.Выбрать пары сотрудников, которые работали хотя бы над двумя
--общими проектами.
--Почему в сущности "Проекты" есть атрибут id_сотрудника,
--а в сущности "Сотрудники" нет атрибута id_проекта?